
public class TestBST {
	
	public static void fillListsWithData(MyBST bst, Comparable[] list) {
		for (Comparable c : list) {
			bst.add(c) ;
		}
	}
	
	public static void main (String [] args)
	{
		MyBST<String> bst = new MyBST<String>();
		
		String[] strings = {"Ahren", "Asher", "Markus", "Gabe", "Chase", "Allie", "Alexandra",
				"Wyatt", "Alex", "Natalie", "Aidan", "Kian", "Sammy", "Andrew", 
				"Samantha", "Ryan", "Derek", "Micah", "Chris", "Megan", "Mark", "Aidan", "Aaron",
				"Will", "Jake", "Ryan", "Grady", "Ben", "Ronan", "Claire", "Sophia"};
		
		fillListsWithData(bst, strings) ;
//		System.out.println (bst.add(6)) ;
		
		System.out.println (bst) ;
		
		System.out.println(bst.getRoot()) ;
		assertEquals(bstsol.remove(strings[strings.length-1]), bst.remove(strings[strings.length-1]));
		assertTrue(verifyBST(bst.getRoot()));
		identicalTrees(bstsol.getRoot(), bst.getRoot());
		assertEquals(bstsol.remove(strings[4]), bst.remove(strings[4]));
		assertTrue(verifyBST(bst.getRoot()));
		identicalTrees(bstsol.getRoot(), bst.getRoot());
		assertEquals(bstsol.remove(strings[0]), bst.remove(strings[0]));
		assertTrue(verifyBST(bst.getRoot()));
		identicalTrees(bstsol.getRoot(), bst.getRoot());	
	}
}
